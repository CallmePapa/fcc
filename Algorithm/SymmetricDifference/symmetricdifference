创建一个函数，接受两个或多个数组，返回所给数组的 对等差分(symmetric difference) (△ or ⊕)数组.

给出两个集合 (如集合 A = {1, 2, 3} 和集合 B = {2, 3, 4}),
而数学术语 "对等差分" 的集合就是指由所有只在两个集合其中之一的元素组成的集合(A △ B = C = {1, 4}).
对于传入的额外集合 (如 D = {2, 3}),
你应该安装前面原则求前两个集合的结果与新集合的对等差分集合 (C △ D = {1, 4} △ {2, 3} = {1, 2, 3, 4}).


算法思路：
1.把 arguments 对象的集合放进一个新数组

2.使用.reduce()对数组进行遍历.
  传入两个参数one(对等差分后的数组),two(当前数组);

3.构造一个去重的函数，防止重复元素影响对差分的结果。对one,two数组去重。

4.将sym()的第一个参数作为初始差分数组。

5.遍历two数组，以此判断two数组中每个元素是否在one中出现。
  如果出现，从one中删除此元素;
  如果没有出现，则将此元素推入到one数组中。